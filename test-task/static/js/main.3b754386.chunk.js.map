{"version":3,"sources":["components/Slider/Slider.module.less","components/common/Button/Button.module.less","components/Blog/Card/Card.module.less","App.module.less","components/Blog/Blog.module.less","assets/image/desktop/img1.png","assets/image/desktop/img2.png","assets/image/desktop/img3.png","assets/image/desktop/img1@2x.png","assets/image/desktop/img2@2x.png","assets/image/desktop/img3@2x.png","components/common/Section/Section.module.less","components/common/Button/Button.jsx","components/Slider/Slide/Slide.jsx","components/Slider/Slider.jsx","redux/selectors/app-selector.js","components/Slider/SliderContainer.jsx","components/common/Section/Section.jsx","components/Blog/Card/Card.jsx","components/Blog/Blog.jsx","redux/app-reducer.js","components/Blog/BlogContainer.jsx","App.js","serviceWorker.js","redux/store.js","index.js"],"names":["module","exports","Button","left","disabled","onControlBtnClick","className","s","button","opacity","onClick","width","height","viewBox","fill","arrow","xmlns","d","stroke","strokeLinecap","Slide","name","text","instagramUsername","active","slide","key","slideText","href","author","target","rel","Slider","sliders","onControlLeftBtnClick","onControlRightBtnClick","activeSlide","slidesLength","slider","sliderWrapper","map","item","i","instagram_username","selfNum","sliderControlPanel","circle","sliderControlBtn","getInitApp","createSelector","state","app","initApp","status","getSliderData","sliderData","data","getBlogData","blogData","sort","item1","item2","Date","parse","date","connect","useState","setActiveSlide","sliderDataLength","setSliderDataLength","useEffect","length","Section","title","props","main","children","Card","imgSrc","imgSrc2x","linkSrc","titleCard","isVisible","card","hide","imgWrapper","src","srcSet","alt","Blog","onMoreClick","isBlogDataLoaded","isCardShow","imgCounter","img1","img1x2","img2","img2x2","img3","img3x2","url","linkMore","SET_INIT_APP","initialState","appReducer","action","type","setBlogData","dispatch","a","require","res","isDataLoaded","setIsDataLoaded","setIsCardShow","setTimeout","setInitApp","document","App","loader","hidden","Boolean","window","location","hostname","match","reducers","combineReducers","composeEnchancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0GACAA,EAAOC,QAAU,CAAC,OAAS,uBAAuB,cAAgB,8BAA8B,MAAQ,sBAAsB,UAAY,0BAA0B,OAAS,uBAAuB,OAAS,uBAAuB,mBAAqB,mCAAmC,OAAS,uBAAuB,iBAAmB,mC,qBCA/UD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,sBAAsB,QAAU,wBAAwB,KAAO,qBAAqB,SAAW,2B,iBCAzJD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,KAAO,mBAAmB,WAAa,yBAAyB,MAAQ,sB,kBCApHD,EAAOC,QAAU,CAAC,IAAM,iBAAiB,OAAS,oBAAoB,OAAS,sB,qBCA/ED,EAAOC,QAAU,CAAC,KAAO,mBAAmB,SAAW,yB,gBCDvDD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCC3CD,EAAOC,QAAU,CAAC,KAAO,wB,s6JCsBVC,EAXA,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,SAAUC,EAAnB,EAAmBA,kBAAnB,OACX,yBACIC,UAAS,UAAKC,IAAEC,OAAP,YAAiBD,IAAEE,QAAnB,YAA8BN,EAAOI,IAAEJ,KAAO,GAA9C,YAAoDC,EAAWG,IAAEH,SAAW,IACrFM,QAAS,WAAYN,GAAUC,MAE/B,yBAAKM,MAAM,IAAIC,OAAO,KAAKC,QAAQ,WAAWC,KAAK,OAAOR,UAAWC,IAAEQ,MAAOC,MAAM,8BAChF,0BAAMV,UAAWC,IAAEQ,MAAOE,EAAE,8BAA8BC,OAAO,QAAQC,cAAc,aCWpFC,EAhBD,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAMC,EAAf,EAAeA,kBAAmBC,EAAlC,EAAkCA,OAAlC,OACV,yBAAKlB,UAAS,UAAKC,IAAEkB,MAAP,YAAgBD,EAASjB,IAAEiB,OAAS,IAAME,IAAKH,GACzD,uBAAGjB,UAAWC,IAAEoB,WACXL,GAEL,uBACIM,KAAI,+BAA0BL,GAC9BjB,UAAWC,IAAEsB,OACbC,OAAO,SACPC,IAAI,uBAEHV,EANL,KAMY,yCAAWE,OCgChBS,EAxCA,SAAC,GAAD,IACKC,EADL,EACKA,QAASC,EADd,EACcA,sBACTC,EAFL,EAEKA,uBAAwBC,EAF7B,EAE6BA,YACxBC,EAHL,EAGKA,aAHL,OAKX,yBAAK/B,UAAWC,IAAE+B,QACd,yBAAKhC,UAAWC,IAAEgC,eAEVN,EACIA,EAAQO,KAAI,SAACC,EAAMC,GAAP,OACR,kBAAC,EAAD,CACIhB,IAAKe,EAAKE,mBACVnB,OAAQY,IAAgBM,EAAI,EAC5BE,QAAUF,EAAE,EACZrB,KAAMoB,EAAKpB,KACXE,kBAAmBkB,EAAKE,mBACxBrB,KAAMmB,EAAKnB,UAGjB,8MAId,yBAAKhB,UAAWC,IAAEsC,oBACd,yBAAKvC,UAAWC,IAAEuC,SAClB,yBAAKxC,UAAWC,IAAEwC,kBACd,kBAAC,EAAD,CACI5C,MAAM,EACNC,SAA0B,IAAhBgC,EACV/B,kBAAmB6B,IAEvB,kBAAC,EAAD,CACI7B,kBAAmB8B,EACnB/B,SAAUgC,IAAgBC,Q,QCjCjCW,EAAaC,aAVV,SAAAC,GAAK,OAAIA,EAAMC,IAAIC,WAUe,SAAAC,GAAM,OAAIA,KAG/CC,EAAgBL,aAZV,SAAAC,GAAK,OAAIA,EAAMC,IAAII,cAYkB,SAAAC,GAAI,OAAIA,KAInDC,EAAcR,aAfV,SAAAC,GAAK,OAAIA,EAAMC,IAAIO,YAegB,SAAAF,GAAI,OACpDA,GAAQA,EAAKhB,KAAI,SAAAC,GAAI,OAAIA,KAChBkB,MAAM,SAACC,EAAOC,GAAR,QAAoBC,KAAKC,MAAMH,EAAMI,MAAQF,KAAKC,MAAMF,EAAMG,aCgClEC,eAJF,SAAAf,GAAK,MAAK,CACnBK,WAAYD,EAAcJ,MAGD,KAAde,EA1CS,SAAC,GAAoB,IAAlBV,EAAiB,EAAjBA,WAAiB,EAGFW,mBAAS,GAHP,mBAGjC9B,EAHiC,KAGpB+B,EAHoB,OAKQD,mBAAS,GALjB,mBAKjCE,EALiC,KAKfC,EALe,KAQxCC,qBAAU,WACFf,GACAc,EAAoBd,EAAWgB,UAEpC,CAAChB,IAcJ,OACIA,GACI,kBAAC,EAAD,CACItB,QAASsB,EACTpB,uBAfmB,WACvBC,EAAcgC,GACdD,EAAe/B,EAAc,IAczBF,sBAVkB,WACtBE,EAAc,GACd+B,EAAe/B,EAAc,IASzBA,YAAaA,EACbC,aAAc+B,O,yBC9BfI,EAPC,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAUC,EAAZ,gCACZ,6BAASpE,UAAWC,IAAEoE,MAClB,4BAAKF,GACJC,EAAME,W,iCCcAC,EAdF,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,SAAUC,EAArB,EAAqBA,QAASC,EAA9B,EAA8BA,UAAWC,EAAzC,EAAyCA,UAAzC,OACT,uBACItD,KAAMoD,EACNlD,OAAO,SACPC,IAAI,sBACJzB,UAAS,UAAKC,IAAE4E,KAAP,YAAeD,EAAY,GAAK3E,IAAE6E,OAE3C,yBAAK9E,UAAWC,IAAE8E,YACd,yBAAKC,IAAKR,EAAQS,OAAM,UAAKT,EAAL,gBAAmBC,EAAnB,OAAkCS,IAAK,UAEnE,wBAAIlF,UAAWC,IAAEkE,OAAQQ,K,sGC8DlBQ,EAhEF,SAAC,GAA6D,IAA3DC,EAA0D,EAA1DA,YAAahC,EAA6C,EAA7CA,SAAUiC,EAAmC,EAAnCA,iBAAkBC,EAAiB,EAAjBA,WACjDC,GAAc,EAClB,OACI,oCACI,yBAAKvF,UAAWC,IAAEoE,MACd,kBAAC,EAAD,CACIG,OAAQgB,IACRf,SAAUgB,IACVf,QAAS,0EACTC,UAAW,4CACXC,WAAW,IAEf,kBAAC,EAAD,CACIJ,OAAQkB,IACRjB,SAAUkB,IACVjB,QAAS,0EACTC,UAAW,4CACXC,WAAW,IAEf,kBAAC,EAAD,CACIJ,OAAQoB,IACRnB,SAAUoB,IACVnB,QAAS,+HACTC,UAAW,oGACXC,WAAW,IAGVS,GAAoBjC,GACrBA,EAASlB,KAAK,SAACC,EAAMC,GAIjB,OAHmB,IAAfmD,IAAkBA,GAAc,GACpCA,IAGI,kBAAC,EAAD,CACInE,IAAKgB,EACLoC,OACoB,IAAfe,EACKC,IACgB,IAAfD,EACDG,IACAE,IAEVnB,SACoB,IAAfc,EACKE,IACgB,IAAfF,EACDI,IACAE,IAEVnB,QAASvC,EAAK2D,IACdnB,UAAWxC,EAAKgC,MAChBS,UAAWU,SAM1BD,GACD,4BAAQrF,UAAWC,IAAE8F,SAAU3F,QAASgF,GAAxC,e,iCCzEZY,EAAe,2BAIbC,EAAe,CACjBnD,SAAS,EACTG,WAAY,KACZG,SAAU,MA8BC8C,EA3BI,WAAmC,IAAlCtD,EAAiC,uDAAzBqD,EAAcE,EAAW,uCAEjD,OAAQA,EAAOC,MAEX,KAAKJ,EACD,OAAO,eACApD,EADP,CAEIE,QAASqD,EAAOpD,SAGxB,IAnBc,8BAoBV,OAAO,eACAH,EADP,CAEIK,WAAYkD,EAAOjD,OAG3B,IAxBY,4BAyBR,OAAO,eACAN,EADP,CAEIQ,SAAU+C,EAAOjD,OAGzB,QAAS,OAAON,ICWTe,eAJF,SAAAf,GAAK,MAAK,CACnBQ,SAAUD,EAAYP,MAGG,CAAEyD,YDiBJ,yDAAM,WAAMC,GAAN,eAAAC,EAAA,sEACXC,EAAQ,IADG,QACvBC,EADuB,SAGzBH,EAnB2B,CAACF,KA1ChB,4BA0CqClD,KAmBtBuD,IAHF,2CAAN,wDCjBZ9C,EAnCO,SAAC,GAA+B,IAA7BP,EAA4B,EAA5BA,SAAUiD,EAAkB,EAAlBA,YAAkB,EAGTzC,oBAAS,GAHA,mBAG1C8C,EAH0C,KAG5BC,EAH4B,OAKb/C,oBAAS,GALI,mBAK1C0B,EAL0C,KAK9BsB,EAL8B,KAOjD5C,qBAAU,WACF0C,IAAiBpB,GACjBuB,YAAW,kBAAMD,GAAc,KAAO,QAY9C,OACI,kBAAC,EAAD,CACIxB,YATY,WACXsB,IACDL,IACAM,GAAgB,KAOhBvD,SAAUA,EACViC,iBAAkBqB,EAClBpB,WAAYA,OCKxB,IAIe3B,eAJF,SAAAf,GAAK,MAAK,CACnBE,QAASJ,EAAWE,MAGK,CAAEkE,WFQL,yDAAM,WAAMR,GAAN,eAAAC,EAAA,sEACVC,EAAQ,IADE,QACtBC,EADsB,UAGxBH,EAX6B,CAACF,KA1ChB,8BA0CuClD,KAWxBuD,IAC7BH,EAb4B,CAACF,KAAMJ,EAAcjD,QAavB,KAJF,2CAAN,wDERXY,EA/Bf,YAAuC,IAAxBmD,EAAuB,EAAvBA,WAAYhE,EAAW,EAAXA,QAWvB,OARAkB,qBAAU,WACN8C,MACD,CAACA,IAEJ9C,qBAAU,WACN+C,SAAS5C,MAAQ,+BAIjB,yBAAKnE,UAAWC,IAAE+G,KACd,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAS7C,MAAO,eACZ,kBAAC,EAAD,OAEJ,yBAAKnE,UAAS,UAAKC,IAAEgH,OAAP,YAAiBnE,EAAU7C,IAAEiH,OAAS,KAApD,gLCxBQC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,qBCNAC,GAAWC,aAAgB,CAC7B5E,IAAKqD,IAIHwB,GAAoBN,OAAOO,sCAAwCC,KAK1DC,GAFDC,aAAYN,GAAUE,GAAkBK,aAAgBC,QCZtEC,IAASC,OACL,kBAAC,IAAD,CAAUL,MAAOA,IACb,kBAAC,EAAD,OAERd,SAASoB,eAAe,SFuHlB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.3b754386.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"slider\":\"Slider_slider__3KQpR\",\"sliderWrapper\":\"Slider_sliderWrapper__1t4vc\",\"slide\":\"Slider_slide__CJGOc\",\"slideText\":\"Slider_slideText__2PbS1\",\"author\":\"Slider_author__1LuLg\",\"active\":\"Slider_active__20lVG\",\"sliderControlPanel\":\"Slider_sliderControlPanel__PmEw5\",\"circle\":\"Slider_circle__1dS97\",\"sliderControlBtn\":\"Slider_sliderControlBtn__1icOu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__SiwN4\",\"arrow\":\"Button_arrow__KKfke\",\"opacity\":\"Button_opacity__1cMeH\",\"left\":\"Button_left__6oK1q\",\"disabled\":\"Button_disabled__3pqBD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1FgI1\",\"hide\":\"Card_hide___8z9l\",\"imgWrapper\":\"Card_imgWrapper__3dsck\",\"title\":\"Card_title__N47Tl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3RSXG\",\"loader\":\"App_loader__2wROf\",\"hidden\":\"App_hidden__2joZy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Blog_main__22orh\",\"linkMore\":\"Blog_linkMore__3HEqu\"};","module.exports = __webpack_public_path__ + \"static/media/img1.50a08ca2.png\";","module.exports = __webpack_public_path__ + \"static/media/img2.48ff2dd4.png\";","module.exports = __webpack_public_path__ + \"static/media/img3.a74fe684.png\";","module.exports = __webpack_public_path__ + \"static/media/img1@2x.e20a9bb9.png\";","module.exports = __webpack_public_path__ + \"static/media/img2@2x.84feee45.png\";","module.exports = __webpack_public_path__ + \"static/media/img3@2x.27e0aa01.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Section_main__3lR7v\"};","import React from \"react\";\r\n\r\nimport s from './Button.module.less';\r\n\r\n/**\r\n * Кнопка\r\n *\r\n * @param left - развернута ли кнопка\r\n * @param disabled - активна ли кнопка\r\n * @param onControlBtnClick - функция обработчик\r\n * @returns {*}\r\n */\r\nconst Button = ({ left, disabled, onControlBtnClick }) => (\r\n    <div\r\n        className={`${s.button} ${s.opacity} ${left ? s.left : ''} ${disabled ? s.disabled : ''}`}\r\n        onClick={() => {if (!disabled) onControlBtnClick()}}\r\n    >\r\n        <svg width=\"8\" height=\"14\" viewBox=\"0 0 8 14\" fill=\"none\" className={s.arrow} xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path className={s.arrow} d=\"M0.999999 1L7 7L0.999999 13\" stroke=\"black\" strokeLinecap=\"round\"/>\r\n        </svg>\r\n    </div>\r\n);\r\n\r\nexport default Button;","import React from \"react\";\r\n\r\nimport s from \"../Slider.module.less\";\r\n\r\n/**\r\n * Слайд в слайдере\r\n *\r\n * @param name - Имя пользователя\r\n * @param text - Текст отзыва\r\n * @param instagramUsername - Инстаграмм профиль\r\n * @param active - Активен ли слайд\r\n * @returns {*}\r\n */\r\nconst Slide = ({ name, text, instagramUsername, active }) => (\r\n    <div className={`${s.slide} ${active ? s.active : ''}`} key={instagramUsername}>\r\n        <p className={s.slideText}>\r\n            {text}\r\n        </p>\r\n        <a\r\n            href={`http://instagram.com/${instagramUsername}`}\r\n            className={s.author}\r\n            target='_blank'\r\n            rel='noopener noreferrer'\r\n        >\r\n            {name}, <span>{`@${instagramUsername}`}</span>\r\n        </a>\r\n    </div>\r\n);\r\n\r\nexport default Slide;\r\n","import React from \"react\";\r\n\r\nimport s from \"./Slider.module.less\";\r\nimport Button from \"../common/Button/Button\";\r\nimport Slide from \"./Slide/Slide\";\r\n\r\n/**\r\n * Отображение слайдера\r\n *\r\n * @param sliders - массив данных для слайдов\r\n * @param onControlLeftBtnClick - обработчик левой кнопки\r\n * @param onControlRightBtnClick - обработчик правой кнопки\r\n * @param activeSlide - номер активного слайда\r\n * @param slidesLength - количество слайдов\r\n * @returns {*}\r\n */\r\nconst Slider = ({\r\n                    sliders, onControlLeftBtnClick,\r\n                    onControlRightBtnClick, activeSlide,\r\n                    slidesLength\r\n                }) => (\r\n    <div className={s.slider}>\r\n        <div className={s.sliderWrapper}>\r\n            {\r\n                sliders ?\r\n                    sliders.map((item, i) => (\r\n                        <Slide\r\n                            key={item.instagram_username}\r\n                            active={activeSlide === i + 1}\r\n                            selfNum={(i+1)}\r\n                            name={item.name}\r\n                            instagramUsername={item.instagram_username}\r\n                            text={item.text}\r\n                        />\r\n                    ))\r\n                    : <p>Данные слайдера еще загружаются...</p>\r\n\r\n            }\r\n        </div>\r\n        <div className={s.sliderControlPanel}>\r\n            <div className={s.circle} />\r\n            <div className={s.sliderControlBtn}>\r\n                <Button\r\n                    left={true}\r\n                    disabled={activeSlide === 1}\r\n                    onControlBtnClick={onControlLeftBtnClick}\r\n                />\r\n                <Button\r\n                    onControlBtnClick={onControlRightBtnClick}\r\n                    disabled={activeSlide === slidesLength}\r\n                />\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Slider;","import { createSelector } from \"reselect\";\r\n\r\n\r\n// Simple-селекторы\r\n// Напрямую получают данные из state\r\n\r\nconst ititApp = state => state.app.initApp;\r\nconst sliderData = state => state.app.sliderData;\r\nconst blogData = state => state.app.blogData;\r\n\r\n\r\n// Selectors\r\n// При использовании reselect можно предоставлять изменные данные для компонент\r\n// Так же reselect не прокидывает данные в компоненту, если они не изменились\r\n\r\n// Получить информацию об инициализации приложения\r\nexport const getInitApp = createSelector(ititApp, status => status);\r\n\r\n// Получить данные для слайдера\r\nexport const getSliderData = createSelector(sliderData, data => data);\r\n\r\n// Данные для блога\r\n// Перед отдачей сортируем от нового к старому\r\nexport const getBlogData = createSelector(blogData, data => (\r\n    data && data.map(item => item)\r\n            .sort( (item1, item2) => -(Date.parse(item1.date) - Date.parse(item2.date)))\r\n));","import React, {useEffect, useState} from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Slider from \"./Slider\";\r\n\r\nimport { getSliderData } from \"../../redux/selectors/app-selector\";\r\n\r\n/**\r\n * Контейнерная компонента для слайдера\r\n * Здесь обрабатываются различные события слайдера\r\n * и само управление слайдером\r\n *\r\n * @param sliderData - массив данных слайдов\r\n * @returns {*}\r\n */\r\nconst SliderContainer = ({ sliderData }) => {\r\n\r\n    // Номер активного слайда\r\n    const [activeSlide, setActiveSlide] = useState(1);\r\n    // Длина массива слайдов\r\n    const [sliderDataLength, setSliderDataLength] = useState(0);\r\n\r\n    // Установка длины массива слайдов\r\n    useEffect(() => {\r\n        if (sliderData) {\r\n            setSliderDataLength(sliderData.length);\r\n        }\r\n    }, [sliderData]);\r\n\r\n    // Обработчик на правую кнопку слайдера\r\n    const onControlRightBtnClick = () => {\r\n        if (activeSlide < sliderDataLength)\r\n            setActiveSlide(activeSlide + 1)\r\n    };\r\n\r\n    // Обработчик на левую кнопку слайдера\r\n    const onControlLeftBtnClick = () => {\r\n        if (activeSlide > 1)\r\n            setActiveSlide(activeSlide - 1)\r\n    };\r\n\r\n    return (\r\n        sliderData &&\r\n            <Slider\r\n                sliders={sliderData}\r\n                onControlRightBtnClick={onControlRightBtnClick}\r\n                onControlLeftBtnClick={onControlLeftBtnClick}\r\n                activeSlide={activeSlide}\r\n                slidesLength={sliderDataLength}\r\n            />\r\n    );\r\n};\r\n\r\nconst mstp = state => ({\r\n    sliderData: getSliderData(state),\r\n});\r\n\r\nexport default connect(mstp, null)(SliderContainer);","import React from 'react';\r\n\r\nimport s from './Section.module.less';\r\n\r\n/**\r\n * Секция страницы\r\n *\r\n * @param title - заголовок секции\r\n * @param props - остаточные параметры (ex: потомки)\r\n * @returns {*}\r\n */\r\nconst Section = ({title, ...props}) => (\r\n    <section className={s.main}>\r\n        <h2>{title}</h2>\r\n        {props.children}\r\n    </section>\r\n);\r\n\r\nexport default Section;","import React from \"react\";\r\n\r\nimport s from './Card.module.less';\r\n\r\n/**\r\n * Карточка-ссылка для блога\r\n *\r\n * @param imgSrc - стандартная картинка\r\n * @param imgSrc2x - картинка для ретины\r\n * @param linkSrc - ссылка\r\n * @param titleCard - заголовок\r\n * @param isVisible - видна ли карточка\r\n * @returns {*}\r\n */\r\nconst Card = ({ imgSrc, imgSrc2x, linkSrc, titleCard, isVisible }) => (\r\n    <a\r\n        href={linkSrc}\r\n        target='_blank'\r\n        rel='noopener noreferrer'\r\n        className={`${s.card} ${isVisible ? '' : s.hide}`}\r\n    >\r\n        <div className={s.imgWrapper}>\r\n            <img src={imgSrc} srcSet={`${imgSrc} 1x, ${imgSrc2x} 2x`} alt={'text'} />\r\n        </div>\r\n        <h3 className={s.title}>{titleCard}</h3>\r\n    </a>\r\n);\r\n\r\nexport default Card;","import React from 'react';\r\n\r\nimport s from './Blog.module.less';\r\n\r\nimport Card from \"./Card/Card\";\r\n\r\nimport img1 from './../../assets/image/desktop/img1.png';\r\nimport img2 from './../../assets/image/desktop/img2.png';\r\nimport img3 from './../../assets/image/desktop/img3.png';\r\nimport img1x2 from './../../assets/image/desktop/img1@2x.png';\r\nimport img2x2 from './../../assets/image/desktop/img2@2x.png';\r\nimport img3x2 from './../../assets/image/desktop/img3@2x.png';\r\n\r\n/**\r\n * Отображение блога\r\n *\r\n * @param onMoreClick - обработчик кнопки Read More\r\n * @param blogData - массив данных блога\r\n * @param isBlogDataLoaded - загружен ли массив данных\r\n * @param isCardShow - показаны ли загруженные карточки\r\n * @returns {*}\r\n */\r\nconst Blog = ({ onMoreClick, blogData, isBlogDataLoaded, isCardShow }) => {\r\n    let imgCounter = -1;\r\n    return (\r\n        <>\r\n            <div className={s.main}>\r\n                <Card\r\n                    imgSrc={img1}\r\n                    imgSrc2x={img1x2}\r\n                    linkSrc={'https://blog.combin.com/instagram-faq-all-you-need-to-know-bb2559ac606b'}\r\n                    titleCard={'Instagram FAQ — All You Need To Know'}\r\n                    isVisible={true}\r\n                />\r\n                <Card\r\n                    imgSrc={img2}\r\n                    imgSrc2x={img2x2}\r\n                    linkSrc={'https://blog.combin.com/dmexco-2019-meet-combin-in-cologne-b845529a1e63'}\r\n                    titleCard={'DMEXCO 2019 — Meet Combin in Cologne'}\r\n                    isVisible={true}\r\n                />\r\n                <Card\r\n                    imgSrc={img3}\r\n                    imgSrc2x={img3x2}\r\n                    linkSrc={'https://blog.combin.com/limits-display-new-user-preview-new-filters-and-many-more-features-all-about-combin-2-1-d78713383da7'}\r\n                    titleCard={'Limits Display, New User Preview, New Filters, and Many More Features — All about Combin 2.1'}\r\n                    isVisible={true}\r\n                />\r\n                {\r\n                    (isBlogDataLoaded && blogData) &&\r\n                    blogData.map( (item, i) => {\r\n                        if (imgCounter === 2) imgCounter = -1;\r\n                        imgCounter++;\r\n\r\n                        return (\r\n                            <Card\r\n                                key={i}\r\n                                imgSrc={\r\n                                    (imgCounter === 0)\r\n                                        ? img1\r\n                                        : (imgCounter === 1)\r\n                                        ? img2\r\n                                        : img3\r\n                                }\r\n                                imgSrc2x={\r\n                                    (imgCounter === 0)\r\n                                        ? img1x2\r\n                                        : (imgCounter === 1)\r\n                                        ? img2x2\r\n                                        : img3x2\r\n                                }\r\n                                linkSrc={item.url}\r\n                                titleCard={item.title}\r\n                                isVisible={isCardShow}\r\n                            />)\r\n                    })\r\n                }\r\n            </div>\r\n            {\r\n                !isBlogDataLoaded &&\r\n                <button className={s.linkMore} onClick={onMoreClick}>Read More</button>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Blog;","/**\r\n *\r\n * Редьюсер приложения\r\n *\r\n */\r\n\r\nconst\r\n    SET_INIT_APP = 'app-reducer/SET_INIT_APP',\r\n    SET_SLIDER_DATA = 'app-reducer/SER_SLIDER_DATA',\r\n    SET_BLOG_DATA = 'app-reducer/SET_BLOG_DATA';\r\n\r\nconst initialState = {\r\n    initApp: false,\r\n    sliderData: null,\r\n    blogData: null,\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_INIT_APP: \r\n            return {\r\n                ...state,\r\n                initApp: action.status\r\n            };\r\n\r\n        case SET_SLIDER_DATA:\r\n            return {\r\n                ...state,\r\n                sliderData: action.data\r\n            };\r\n\r\n        case SET_BLOG_DATA:\r\n            return {\r\n                ...state,\r\n                blogData: action.data\r\n            };\r\n\r\n        default: return state;\r\n    }\r\n\r\n};\r\n\r\nexport default appReducer;\r\n\r\n\r\n// Actions\r\n\r\nconst setInitAppAction = status => ({type: SET_INIT_APP, status});\r\nconst setSliderDataAction = data => ({type: SET_SLIDER_DATA, data});\r\nconst setBlogDataAction = data => ({type: SET_BLOG_DATA, data});\r\n\r\n\r\n// Thunks\r\n\r\n// Инициализировать приложение\r\n// и добавить данные слайдера\r\nexport const setInitApp = () => async dispatch => {\r\n    const res = await require('./../json/feedback_data');\r\n    if (res) {\r\n        dispatch(setSliderDataAction(res));\r\n        dispatch(setInitAppAction(true));\r\n    }\r\n};\r\n\r\n// Добавить данные блога\r\nexport const setBlogData = () => async dispatch => {\r\n    const res = await require('./../json/blog_posts');\r\n    if (res) {\r\n        dispatch(setBlogDataAction(res));\r\n    }\r\n};","import React, {useEffect, useState} from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Blog from \"./Blog\";\r\n\r\nimport { setBlogData } from \"../../redux/app-reducer\";\r\nimport { getBlogData } from \"../../redux/selectors/app-selector\";\r\n\r\n/**\r\n * Контейнер для блога\r\n *\r\n * @param blogData - массив со статьями\r\n * @param setBlogData - функция загрузки данных блога\r\n * @returns {*}\r\n */\r\nconst BlogContainer = ({ blogData, setBlogData }) => {\r\n\r\n    // Флаг загрузки информации\r\n    const [isDataLoaded, setIsDataLoaded] = useState(false);\r\n    // Флаг отображения карточек\r\n    const [isCardShow, setIsCardShow] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (isDataLoaded && !isCardShow) {\r\n            setTimeout(() => setIsCardShow(true), 100)\r\n        }\r\n    });\r\n\r\n    // Обработчик на событие клика Read More\r\n    const onMoreClick = () => {\r\n        if (!isDataLoaded) {\r\n            setBlogData();\r\n            setIsDataLoaded(true);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Blog\r\n            onMoreClick={onMoreClick}\r\n            blogData={blogData}\r\n            isBlogDataLoaded={isDataLoaded}\r\n            isCardShow={isCardShow}\r\n        />\r\n    );\r\n};\r\n\r\nconst mstp = state => ({\r\n    blogData: getBlogData(state),\r\n});\r\n\r\nexport default connect(mstp, { setBlogData })(BlogContainer);","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport s from \"./App.module.less\";\n\nimport SliderContainer from \"./components/Slider/SliderContainer\";\nimport Section from \"./components/common/Section/Section\";\nimport BlogContainer from \"./components/Blog/BlogContainer\";\n\nimport { setInitApp } from \"./redux/app-reducer\";\nimport { getInitApp } from \"./redux/selectors/app-selector\";\n\n/**\n * Главная компонента\n *\n * @param setInitApp - функция thunk для запроса инициализации приложения\n * @param initApp - статус инициализации приложения\n * @returns {*}\n */\nfunction App({ setInitApp, initApp }) {\n\n    // Хук для инициализации\n    useEffect(() => {\n        setInitApp();\n    }, [setInitApp]);\n\n    useEffect(() => {\n        document.title = \"Test task from Open Media\";\n    });\n\n    return (\n        <div className={s.App}>\n            <SliderContainer />\n            <Section title={'What\\'s New?'}>\n                <BlogContainer />\n            </Section>\n            <div className={`${s.loader} ${initApp ? s.hidden : ''}`}>\n                Пожалуйста, дождитесь загрузки...\n            </div>\n        </div>\n    );\n}\n\n// MapStateToProps\n// объект с данными из общего state\n// Получен при помощи селекторов\nconst mstp = state => ({\n    initApp: getInitApp(state),\n});\n\nexport default connect(mstp, { setInitApp })(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/**\r\n * \r\n * Настройки redux store\r\n * \r\n*/\r\n\r\nimport { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport appReducer from './app-reducer';\r\n\r\n// Редьюсеры\r\nconst reducers = combineReducers({\r\n    app: appReducer,\r\n});\r\n\r\n// Для Redux DevTools\r\nconst composeEnchancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n// Создание Store\r\nconst store = createStore(reducers, composeEnchancers(applyMiddleware(thunk)));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, \ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}